stages:
  - build
  - deploy

variables:
  # Server configuration (same as in look.sh)
  SSH_HOST: 'wet19.nazwa.pl'
  SSH_PORT: '22'
  SSH_USER: 'wet19'
  REMOTE_THEME_PATH: 'domains/fajnestarocie.pl/public_html/wp-content/themes/fajnestarocie'

# Build stage - compile assets
build:
  stage: build
  image: node:18-alpine
  cache:
    paths:
      - node_modules/
  script:
    - echo "Installing dependencies..."
    - npm ci
    - echo "Building assets..."
    - npm run build
    - echo "Build completed successfully!"
  artifacts:
    paths:
      - dist/
    expire_in: 1 hour
  only:
    - master
    - main
  when: manual

# Production deployment - upload theme files to server
deploy:
  stage: deploy
  image: alpine:latest
  dependencies:
    - build
  before_script:
    # Install required packages
    - apk add --no-cache openssh-client rsync

    # Setup SSH
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H -p $SSH_PORT $SSH_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - echo "🚀 Starting theme deployment..."
    - echo "📁 Target: $SSH_USER@$SSH_HOST:$REMOTE_THEME_PATH"

    # Create a temporary directory for deployment files
    - mkdir -p /tmp/theme-deploy

    # Copy theme files (exclude development files)
    - |
      rsync -av \
        --exclude='node_modules/' \
        --exclude='.git/' \
        --exclude='.gitlab-ci.yml' \
        --exclude='package.json' \
        --exclude='package-lock.json' \
        --exclude='temp/' \
        --exclude='.gitignore' \
        --exclude='*.md' \
        --exclude='.env*' \
        --exclude='.vscode/' \
        --exclude='.idea/' \
        --exclude='*.log' \
        --exclude='.DS_Store' \
        ./ /tmp/theme-deploy/

    # Deploy to server
    - |
      rsync -avz \
        -e "ssh -p $SSH_PORT -o StrictHostKeyChecking=no" \
        /tmp/theme-deploy/ \
        $SSH_USER@$SSH_HOST:$REMOTE_THEME_PATH/

    - echo "✅ Theme deployment completed successfully!"

  after_script:
    # Clean up
    - rm -rf /tmp/theme-deploy

  only:
    - master
    - main
  when: manual

# Rollback job
rollback:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H -p $SSH_PORT $SSH_HOST >> ~/.ssh/known_hosts

  script:
    - echo "🔄 Rolling back to previous version..."
    - |
      ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "
        cd domains/fajnestarocie.pl/public_html/wp-content/themes/ &&
        if [ -d 'fajnestarocie-backup' ]; then
          rm -rf fajnestarocie-temp &&
          mv fajnestarocie fajnestarocie-temp &&
          mv fajnestarocie-backup fajnestarocie &&
          mv fajnestarocie-temp fajnestarocie-backup &&
          echo 'Rollback completed successfully!'
        else
          echo 'No backup found for rollback'
          exit 1
        fi
      "

  only:
    - master
    - main
  when: manual
